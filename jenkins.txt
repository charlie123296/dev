# Complete Jenkins Installation and Setup Guide for Beginners

## What is Jenkins?
Jenkins is a tool that helps developers automatically build, test, and deploy their code. Think of it as an automated assistant that runs your tasks whenever you make changes to your code.

## Prerequisites
- An Ubuntu EC2 instance (which you have)
- SSH access to your server
- Basic terminal knowledge

---

## STEP 1: Connect to Your EC2 Instance

Open your terminal/command prompt and connect to your EC2 instance:

bash
ssh -i your-key.pem ubuntu@your-ec2-public-ip


Replace:
- your-key.pem with your actual key file
- your-ec2-public-ip with your EC2's public IP address

---

## STEP 2: Update Your System

Always start by updating your system packages:

bash
sudo apt update
sudo apt upgrade -y


*What this does:* Downloads the latest package information and upgrades existing packages.

---

## STEP 3: Install Java (Required for Jenkins)

Jenkins needs Java to run. Install OpenJDK 17:

bash
sudo apt install openjdk-17-jdk -y


*Verify Java installation:*
bash
java -version


You should see output showing Java 17 is installed.

---

## STEP 4: Add Jenkins Repository

Jenkins isn't in Ubuntu's default repositories, so we need to add it:

*Step 4a: Add Jenkins signing key*
bash
curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null


*Step 4b: Add Jenkins repository*
bash
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null


*Step 4c: Update package list*
bash
sudo apt update


---

## STEP 5: Install Jenkins

bash
sudo apt install jenkins -y


This command downloads and installs Jenkins on your system.

---

## STEP 6: Start Jenkins Service

*Start Jenkins:*
bash
sudo systemctl start jenkins


*Enable Jenkins to start automatically on boot:*
bash
sudo systemctl enable jenkins


*Check if Jenkins is running:*
bash
sudo systemctl status jenkins


You should see "active (running)" in green text.

---

## STEP 7: Configure Firewall

Allow traffic on port 8080 (Jenkins default port):

bash
sudo ufw allow 8080


If UFW is not enabled, enable it:
bash
sudo ufw enable


---

## STEP 8: Configure AWS Security Group

1. Go to AWS Console
2. Navigate to EC2 → Security Groups
3. Find your instance's security group
4. Click "Edit inbound rules"
5. Add a new rule:
   - *Type:* Custom TCP
   - *Port:* 8080
   - *Source:* 0.0.0.0/0 (Anywhere)
6. Save the rule

---

## STEP 9: Access Jenkins Web Interface

Open your web browser and go to:

http://YOUR-EC2-PUBLIC-IP:8080


Replace YOUR-EC2-PUBLIC-IP with your actual EC2 public IP address.

You should see the "Unlock Jenkins" screen.

---

## STEP 10: Get Initial Admin Password

In your SSH terminal, run:

bash
sudo cat /var/lib/jenkins/secrets/initialAdminPassword


This will display a long password like: a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6

Copy this password and paste it in the Jenkins web interface, then click "Continue".

---

## STEP 11: Install Plugins

You'll see "Customize Jenkins" screen with two options:

*Choose:* "Install suggested plugins" (the blue box on the left)

*Why:* This installs essential plugins that most Jenkins users need:
- Git integration
- Pipeline support
- Build tools
- Email notifications
- And more...

Wait for the installation to complete (2-5 minutes).

---

## STEP 12: Create First Admin User

After plugins install, you'll see "Create First Admin User" form:

*Fill out:*
- *Username:* admin (or your preferred username)
- *Password:* Create a strong password
- *Confirm password:* Re-enter the same password
- *Full name:* Your full name
- *Email:* Your email address

Click "Save and Continue"

---

## STEP 13: Instance Configuration

You'll see "Instance Configuration" asking for Jenkins URL:

*Default URL shown:* http://your-ec2-ip:8080/

*What to do:* Click "Save and Finish" (the default URL is usually correct)

---

## STEP 14: Complete Setup

You'll see "Jenkins is ready!" message.

Click "Start using Jenkins"

---

## STEP 15: Jenkins Dashboard

Congratulations! You should now see the Jenkins dashboard with:

- *Left sidebar:* Navigation menu
- *Main area:* Welcome message and quick start options
- *Top:* User menu and settings

---

## What Each Menu Item Means

### Left Sidebar Options:

1. *New Item:* Create new jobs/projects
2. *People:* Manage users
3. *Build History:* See past builds
4. *Manage Jenkins:* System configuration
5. *My Views:* Personal dashboards

### Getting Started Options:

1. *Create a job:* Set up automated tasks
2. *Set up an agent:* Add more build servers
3. *Configure a cloud:* Connect to cloud services

---

## Next Steps - Your First Jenkins Job

1. Click "New Item" in the left sidebar
2. Enter a name like "my-first-job"
3. Select "Freestyle project"
4. Click "OK"
5. In the configuration:
   - Add a description: "My first Jenkins job"
   - Scroll down to "Build Steps"
   - Click "Add build step" → "Execute shell"
   - Enter: echo "Hello Jenkins!"
   - Click "Save"
6. Click "Build Now" to run your first job

---

## Troubleshooting Common Issues

### Problem: Cannot access Jenkins web interface
*Solution:* 
- Check if Jenkins is running: sudo systemctl status jenkins
- Verify port 8080 is open: sudo ufw status
- Check AWS Security Group has port 8080 open

### Problem: Forgot admin password
*Solution:*
bash
sudo cat /var/lib/jenkins/secrets/initialAdminPassword


### Problem: Jenkins won't start
*Solution:*
bash
sudo systemctl restart jenkins
sudo journalctl -u jenkins -f


---

## Security Best Practices

1. *Change default port:* Edit /etc/default/jenkins and change HTTP_PORT=8080 to another port
2. *Enable HTTPS:* Configure SSL certificates
3. *Regular updates:* Update Jenkins and plugins regularly
4. *User permissions:* Create specific users instead of using admin for everything
5. *Backup:* Regularly backup Jenkins configuration

---

## Summary

You now have:
- ✅ Jenkins installed and running
- ✅ Web interface accessible
- ✅ Admin user created
- ✅ Essential plugins installed
- ✅ Ready to create your first automation job

Jenkins is now ready for you to start automating your development workflows!


